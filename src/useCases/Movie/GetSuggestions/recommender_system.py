# -*- coding: utf-8 -*-
"""recommender_system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z615gRMCHrl0yKu4UV5zd69vRW_uuxUm
"""

import pandas as pd
import numpy as np
from sklearn.neighbors import NearestNeighbors
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score

movies_rating = pd.read_csv("d_users_rates.csv", sep=',', encoding="latin-1", error_bad_lines=False)

movies_rating

number_rating = movies_rating.groupby('title')['rate'].count().reset_index()

number_rating

# renomeando coluna rate para number_of_ratings
number_rating.rename(columns= {'rate': 'number_of_ratings'}, inplace=True)
number_rating

final_rating  = movies_rating.merge(number_rating, on='title')
final_rating

final_rating = final_rating[final_rating['number_of_ratings'] >= 15]
final_rating.shape

# remover registros possivelmente duplicados
final_rating.drop_duplicates(['id_user', 'title'], inplace=True)
final_rating.shape

# users_pivot = final_rating.pivot_table(columns='imdb_title_id', index='id_user', values='rate')
# users_pivot

movies_pivot = final_rating.pivot_table(columns='id_user', index='title', values='rate')
movies_pivot

movies_pivot.shape

# users_pivot.fillna(0, inplace=True)
# users_pivot

movies_pivot.fillna(0, inplace=True)
movies_pivot

# converte para uma matriz esparsa
from scipy.sparse import csr_matrix
# users_sparse = csr_matrix(users_pivot)
movies_sparse = csr_matrix(movies_pivot)

model = NearestNeighbors(algorithm='brute')
model.fit(movies_sparse)

# escolhendo o filme The Old Guard
distances, suggestions = model.kneighbors(movies_pivot.iloc[0, :].values.reshape(1, -1))

arr = list()
a = []
for i in range(len(suggestions)):
  a.append(movies_pivot.index[suggestions[i]])

for el in range(len(a[0])):
  arr.append(a[0][el])

print(arr)
